#!/usr/bin/env node

const { program } = require('commander');

program
  .name('wp-release')
  .description('WordPress release automation CLI')
  .version('1.0.0');

program
  .command('init')
  .description('Initialize release automation in current project')
  .action(async () => {
    const { initCommand } = require('../src/commands/init');
    await initCommand();
  });

program
  .command('release')
  .description('Run release process')
  .option('-t, --type <type>', 'Release type (patch, minor, major)', 'patch')
  .option('-d, --dry-run', 'Dry run without making changes')
  .action(async (options) => {
    const { releaseCommand } = require('../src/commands/release');
    await releaseCommand(options);
  });

program
  .command('build')
  .description('Build release package')
  .option('-v, --version <version>', 'Specific version to build')
  .action(async (options) => {
    const { buildCommand } = require('../src/commands/build');
    await buildCommand(options);
  });

program
  .command('version')
  .description('Show or update version')
  .option('-t, --type <type>', 'Version bump type (patch, minor, major)')
  .action((options) => {
    const { versionCommand } = require('../src/commands/version');
    versionCommand(options);
  });

program
  .command('publish')
  .description('Run full release process and push to Git')
  .option('-t, --type <type>', 'Release type (patch, minor, major)', 'patch')
  .option('-d, --dry-run', 'Dry run without making changes')
  .action(async (options) => {
    const { publishCommand } = require('../src/commands/publish');
    await publishCommand(options);
  });

program
  .command('zip')
  .description('Create ZIP archive from build directory')
  .option('-v, --version <version>', 'Specific version for ZIP filename')
  .action(async (options) => {
    const { zipCommand } = require('../src/commands/zip');
    await zipCommand(options);
  });

program.parse();
